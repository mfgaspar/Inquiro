{
 "layout": {
  "title": "timeline",
  "rows": [
   {
    "id": "a7793362-d4d4-7ea7-899e-1a2ed3cd22f9",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "NumeralJS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/Inquiro/static/custom/js/numeral.min.js",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     }
    ]
   },
   {
    "id": "3677c982-7771-d100-524d-c4736b85d72b",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "MomentJS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/Inquiro/static/custom/js/moment.min.js",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     }
    ]
   },
   {
    "id": "5558d888-db53-5bd2-45b9-d3b3ef437869",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "TimelineJS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/Inquiro/static/custom/js/storyjs-embed.js",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     }
    ]
   },
   {
    "id": "eb8c21bf-040c-e5f5-15f5-84f3cb320103",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "InquiroJS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/Inquiro/static/custom/js/Inquiro.js",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     }
    ]
   },
   {
    "id": "e42774de-19bb-bd71-25fd-c4af19e6d0fd",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "InquiroCSS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/Inquiro/static/custom/css/Inquiro.css",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     }
    ]
   },
   {
    "id": "74298bb4-fb97-5c2a-d810-67c25ac0bfae",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "d37891d6-d70c-f835-fb0a-29fea13d0ed2",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "74298bb4-fb97-5c2a-d810-67c25ac0bfae",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "12",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "e2635f61-49e0-3878-c211-4f2f3feb7b1f",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "d37891d6-d70c-f835-fb0a-29fea13d0ed2",
    "properties": [
     {
      "name": "name",
      "value": "plugin",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "39598ee3-2900-b0d7-ade5-981314af89b6",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "d37891d6-d70c-f835-fb0a-29fea13d0ed2",
    "properties": [
     {
      "name": "name",
      "value": "timelineWrapper",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "timelineWrapper",
      "type": "String"
     }
    ]
   },
   {
    "id": "3c372c9c-3be6-8896-6b89-e3fef339372a",
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column",
    "parent": "39598ee3-2900-b0d7-ade5-981314af89b6",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "bootstrapExtraSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapSmall",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapMedium",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapLarge",
      "value": "",
      "type": "String"
     },
     {
      "name": "bootstrapCssClass",
      "value": "",
      "type": "String"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "9952ec77-c4d6-3104-e566-4350f146e84a",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "3c372c9c-3be6-8896-6b89-e3fef339372a",
    "properties": [
     {
      "name": "name",
      "value": "timelineContent",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "timelineContent",
      "type": "String"
     }
    ]
   },
   {
    "id": "5d35326b-e188-3a96-0bb8-890ed392ce88",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "3c372c9c-3be6-8896-6b89-e3fef339372a",
    "properties": [
     {
      "name": "name",
      "value": "executionsTimeChartContent",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "executionsTimeChartContent",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "3adc6aaa-a0d3-92b0-9187-be0dc680eb7d",
    "type": "ComponentsJavascriptParameter",
    "typeDesc": "Custom parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "jobsQueryObj",
      "type": "Id"
     },
     {
      "name": "javaScript",
      "value": "{} ",
      "type": "JavaScript"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "22c8b4ed-527f-ad91-11f1-d3b6b6f6c83d",
    "type": "ComponentsJavascriptParameter",
    "typeDesc": "Custom parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "dataObject",
      "type": "Id"
     },
     {
      "name": "javaScript",
      "value": "{ \"timeline\": {\n                    \"headline\":\"The Main Timeline Headline Goes here\",\n                    \"type\":\"default\",\n                    \"text\":\"<p>Intro body text goes here, some HTML is ok</p>\",\n                    \"asset\": {\n                        //\"media\":\"http://yourdomain_or_socialmedialink_goes_here.jpg\",\n                        \"credit\":\"Credit Name Goes Here\",\n                        \"caption\":\"Caption text goes here\"\n                    },\n                    \"date\": [\n                        {\n                            \"startDate\":\"2011,12,10,14,30\",\n                            \"endDate\":\"2011,12,10,15,15\",\n                            \"headline\":\"Headline Goes Here\",\n                            \"text\":\"<p>Body text goes here, some HTML is OK</p>\",\n                            //\"tag\":\"This is Optional\",\n                            \"asset\": {\n                                //\"media\":\"http://twitter.com/ArjunaSoriano/status/164181156147900416\",\n                                //\"thumbnail\":\"optional-32x32px.jpg\",\n                                \"credit\":\"Credit Name Goes Here\",\n                                \"caption\":\"Caption text goes here\"\n                            }\n                        },\n                        {\n                            \"startDate\":\"2011,12,10,14,30\",\n                            \"endDate\":\"2011,12,10,15,15\",\n                            \"headline\":\"Headline Goes Here 2\",\n                            \"text\":\"<p>Body text goes here 2 , some HTML is OK</p>\",\n                            //\"tag\":\"This is Optional\",\n                            \"asset\": {\n                                //\"media\":\"http://twitter.com/ArjunaSoriano/status/164181156147900416\",\n                                //\"thumbnail\":\"optional-32x32px.jpg\",\n                                \"credit\":\"Credit Name Goes Here 2\",\n                                \"caption\":\"Caption text goes here 2\"\n                            }\n                        },\n                        {\n                            \"startDate\":\"2011,12,10,14,30\",\n                            \"endDate\":\"2011,12,10,15,10\",\n                            \"headline\":\"Headline Goes Here 3\",\n                            \"text\":\"<p>Body text goes here 3 , some HTML is OK</p>\",\n                            //\"tag\":\"This is Optional\",\n                            \"asset\": {\n                                //\"media\":\"http://twitter.com/ArjunaSoriano/status/164181156147900416\",\n                                //\"thumbnail\":\"optional-32x32px.jpg\",\n                                \"credit\":\"Credit Name Goes Here 2\",\n                                \"caption\":\"Caption text goes here 2\"\n                            }\n                        }\n                    ]/*\n                    ,\n                    \"era\": [\n                        {\n                            \"startDate\":\"2011,12,10\",\n                            \"endDate\":\"2011,12,20\",\n                            \"headline\":\"Headline Goes Here\",\n                            //\"tag\":\"This is Optional\"\n                        }\n\n                    ]\n                    */\n                }\n} ",
      "type": "JavaScript"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Others",
      "type": "Label"
     }
    ]
   },
   {
    "id": "e6032684-7426-9723-19a5-a4a94a2f52b8",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "jobsQuery",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "jobsQueryResults",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "jobsQuery",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": "3",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "7f6dc4b6-267d-7736-3031-face377df74b",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "hadoopMetricsQuery",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "hadoopMetricsResults",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "hadoopMetricsQuery",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": "3",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "ed7b3426-8e9d-a307-de6a-d99e84e1fcee",
    "type": "ComponentsQuery",
    "typeDesc": "Query Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "pdiMetricsQuery",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "resultvar",
      "value": "pdiMetricsResults",
      "type": "Result"
     },
     {
      "name": "dataSource",
      "value": "pdiMetricsQuery",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": "3",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "823c0901-d4b1-b093-e800-193b2d0b2534",
    "type": "ComponentstextComponent",
    "typeDesc": "Text Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "timeline",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "expression",
      "value": "function f() {\n\n    _.each(jobsQueryResults, function(row, ridx){\n        jobsQueryObj[row[0]] = {\n            \"ID\": row[0], \n            \"Name\": row[3], \n            \"Username\": row[4], \n            \"Status\": row[5], \n            \"Start Date/Time\": row[6], \n            \"End Date/Time\": row[7], \n            \"Duration (seconds)\": row[8],\n            \"task\": {\n                \"mapper\": {},\n                \"combiner\": {},\n                \"reducer\": {}\n            }\n        };\n    });\n\n    _.each(pdiMetricsResults, function(row, idx){\n        jobsQueryObj[row[11]][row[12]][row[13]][row[0]] = jobsQueryObj[row[11]][row[12]][row[13]][row[0]] || {\n            'hostname': row[4],\n            'username': row[5],\n            'startTime': row[7],\n            'endTime': row[8],\n            'duration': row[9],\n            'status': row[6].toLowerCase(),\n            'hadoop': [],\n            'pdi': []\n        };\n        jobsQueryObj[row[11]][row[12]][row[13]][row[0]]['pdi'].push({\n            'metricName': row[1],\n            'metricValue': row[3],\n            'metricUnit': row[2].toLowerCase()\n        });\n    });\n    \n    _.each(hadoopMetricsResults, function(row, idx){\n        jobsQueryObj[row[10]][row[11]][row[12]][row[0]]['hadoop'].push({\n            'metricName': row[13],\n            'metricValue': row[2],\n            'metricUnit': row[14].toLowerCase()\n        });\n    });\n    \n    var data = [];\n    _.each(jobsQueryObj, function(elem, key) {\n        \n        var text =   \"<div class='job' title='\"+elem['ID']+\"'>\" +\n                            \"<p>Job \"+elem['ID']+\" started by user \"+elem['Username']+\", \"+elem['Status'].toLowerCase()+\" and took \"+elem['Duration']+\" seconds to execute</p>\"+\n                            \"<p>Executed: \"+_.keys(elem.task.mapper).length+\" Mapper(s) and \"+_.keys(elem.task.reducer).length+\" Reducer(s)</p>\"+\n                            \"<p><a href='#\"+key+\"'>Click here to get details.</a></p>\"+\n                        \"</div>\";\n                        \n        var mapperPH = \"\";                \n        _.each(elem.task.mapper, function(mapper, mkey) {\n            \n        });\n        \n        var reducerPH = \"\";                \n        _.each(elem.task.reducer, function(reducer, rkey) {\n            \n        });\n        \n        var details =   \"<div class='jobDetails'>\" +\n                            \"<div></div>\" +\n                        \"</div>\";\n                        \n        var tmpData = {\n            \"startDate\": moment(elem['Start Date/Time']).format('YYYY,MM,DD,hh,mm,ss'),\n            \"endDate\": moment(elem['End Date/Time']).format('YYYY,MM,DD,hh,mm,ss'),\n            //\"tag\": \"job\",\n            \"headline\": key,\n            \"text\": text,\n            \"asset\": {\n                //\"media\": \"\",\n                //\"thumbnail\": \"\",\n                \"credit\": \"<p>\"+elem['ID']+\"</p>\",\n                \"caption\": \"<p>\"+elem['ID']+\"</p>\"\n            }\n            /*\n            \"era\": [\n                {\n                    \"startDate\":\"2011,12,10\",\n                    \"endDate\":\"2011,12,20\",\n                    \"headline\":\"Headline Goes Here\",\n                    //\"tag\":\"This is Optional\"\n                }\n            ]\n            */\n        };\n        data.push(tmpData);\n    });\n\n    dataObject = { \n        \"timeline\": {\n            \"headline\":\"Inquiro\",\n            \"type\":\"default\",\n            \"text\":\"<p> Pentaho Data Integration and Hadoop performance analytics. Select the job from which you want to get details. </p>\",\n            \"asset\": {\n                //\"media\":\"http://yourdomain_or_socialmedialink_goes_here.jpg\",\n                \"credit\":\"Miguel Gaspar and Hemal Govind\",\n                \"caption\":\"Evaluate Performance\"\n            },\n            \"date\": data\n        }\n    }\n    \n    createStoryJS({\n                type:               'timeline',              \n                source:             dataObject,\n                width:              '100%',\n                height:             '550',\n                embed_id:           'timelineContent',             //OPTIONAL USE A DIFFERENT DIV ID FOR EMBED\n                start_at_end:       true,                          //OPTIONAL START AT LATEST DATE\n                //start_at_slide:     '4',                            //OPTIONAL START AT SPECIFIC SLIDE\n                start_zoom_adjust:  '-1',                            //OPTIONAL TWEAK THE DEFAULT ZOOM LEVEL\n                hash_bookmark:      true,                           //OPTIONAL LOCATION BAR HASHES\n                font:               'Bevan-PotanoSans',             //OPTIONAL FONT\n                debug:              false,                           //OPTIONAL DEBUG TO CONSOLE\n                lang:               'en',                           //OPTIONAL LANGUAGE\n                maptype:            'toner',                   //OPTIONAL MAP STYLE\n                css:                '/pentaho/api/repos/Inquiro/static/custom/css/timeline.css',     //OPTIONAL PATH TO CSS\n                js:                 '/pentaho/api/repos/Inquiro/static/custom/js/timeline-min.js'    //OPTIONAL PATH TO JS\n    });\n    \n    return \"\";\n} ",
      "type": "JavaScript"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:plugin}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "SCRIPT",
    "name": "Scripts",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Scripts",
      "type": "Label"
     }
    ]
   },
   {
    "id": "83ba9821-f03b-8dc5-9da0-4127acba1aa4",
    "type": "ComponentsFunction",
    "typeDesc": "JavaScript function",
    "parent": "SCRIPT",
    "properties": [
     {
      "name": "name",
      "value": "Dashboards.postInit",
      "type": "Id"
     },
     {
      "name": "javaScript",
      "value": "Dashboards.listenTo( Dashboards, 'cdf:postInit', function(){\n    setTimeout(function() {\n        $('.slider-container .content h3').qtip({\n        content: 'Test',\n        position: {\n            my: 'top left',\n            at: 'bottom left'\n        },\n        hide: {\n            fixed: true, \n            delay: 200\n        },\n        style: {\n            classes: 'qtip-bootstrap',\n            tip: {\n                corner: true,\n                width: 20,\n                height: 6,\n                border: 1\n            }\n        }\n    });}, 2000);\n});",
      "type": "JavaScript"
     }
    ]
   },
   {
    "id": "CHARTS",
    "name": "Charts",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Charts",
      "type": "Label"
     }
    ]
   },
   {
    "id": "c282fc99-5b34-4122-3550-757920b6ffb7",
    "type": "ComponentscccBarChart",
    "typeDesc": "CCC Bar Chart",
    "parent": "CHARTS",
    "properties": [
     {
      "name": "name",
      "value": "jobsExecutionTimeChart",
      "type": "Id"
     },
     {
      "name": "title",
      "value": "",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "dataSource",
      "value": "jobsExecutionTimeQuery",
      "type": "Datasource"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "width",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "height",
      "value": "200",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "colors",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "htmlObject",
      "value": "executionsTimeChartContent",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "function f() {\n    \n    var chartOpts = {\n        height: '100',\n        colors: ['rgba(31, 119, 180, 0.5)'],\n        axisMinorTicks: false,\n        plotFrameVisible: false,\n        baseAxisTicks: false,\n        orthoAxisTicks: false,\n        orthoAxisVisible: false\n    };\n\n    $.extend(true, this.chartDefinition, chartOpts);\n} ",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "function f(data) {\n    data.metadata[0].colName = \"Task\";\n    return data;\n} ",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extensionPoints",
      "value": "[]",
      "type": "EditorValuesArray"
     },
     {
      "name": "animate",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "barOrthoSizeMin",
      "value": 1.5,
      "type": "Float"
     },
     {
      "name": "barSizeMax",
      "value": 2000,
      "type": "Float"
     },
     {
      "name": "barSizeRatio",
      "value": 0.9,
      "type": "Float"
     },
     {
      "name": "barStackedMargin",
      "value": 0,
      "type": "Float"
     },
     {
      "name": "baseAxisClickAction",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "baseAxisDoubleClickAction",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "baseAxisGrid",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "baseAxisLabelSpacingMin",
      "value": "",
      "type": "Float"
     },
     {
      "name": "baseAxisOffset",
      "value": 0,
      "type": "Float"
     },
     {
      "name": "baseAxisOverlappedLabelsMode",
      "value": "hide",
      "type": "cccBaseAxisOverlappedLabelsModeCustom"
     },
     {
      "name": "baseAxisPosition",
      "value": "",
      "type": "cccBaseAxisPositionCustom"
     },
     {
      "name": "baseAxisSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "baseAxisSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "baseAxisTicks",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "baseAxisTitle",
      "value": "",
      "type": "String"
     },
     {
      "name": "baseAxisTitleAlign",
      "value": "",
      "type": "cccBaseAxisTitleAlignCustom"
     },
     {
      "name": "baseAxisTitleFont",
      "value": "12px sans-serif",
      "type": "String"
     },
     {
      "name": "baseAxisTitleMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "baseAxisTitleSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "baseAxisTitleSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "baseAxisTooltipAutoContent",
      "value": "value",
      "type": "cccBaseAxisTooltipAutoContentCustom"
     },
     {
      "name": "baseAxisTooltipEnabled",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "baseAxisTooltipFormat",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "baseAxisVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "categoryRole",
      "value": "",
      "type": "String"
     },
     {
      "name": "clearSelectionMode",
      "value": "emptySpaceClick",
      "type": "cccClearSelectionModeCustom"
     },
     {
      "name": "clickable",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "clickAction",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "color2AxisColors",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "color2AxisLegendClickMode",
      "value": "toggleVisible",
      "type": "cccColor2AxisLegendClickModeCustom"
     },
     {
      "name": "color2AxisLegendDrawLine",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "color2AxisLegendDrawMarker",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "color2AxisLegendShape",
      "value": "",
      "type": "cccColor2AxisLegendShapeCustom"
     },
     {
      "name": "color2AxisLegendVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "color2AxisTransform",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "color2AxisUnbound",
      "value": "",
      "type": "String"
     },
     {
      "name": "colorRole",
      "value": "",
      "type": "String"
     },
     {
      "name": "colorTransform",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "colorUnbound",
      "value": "",
      "type": "String"
     },
     {
      "name": "compatVersion",
      "value": 2,
      "type": "Float"
     },
     {
      "name": "contentMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "contentPaddings",
      "value": "0",
      "type": "String"
     },
     {
      "name": "crosstabMode",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "ctrlSelectMode",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "dataCategoriesCount",
      "value": "",
      "type": "Float"
     },
     {
      "name": "dataIgnoreMetadataLabels",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "dataMeasuresInColumns",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "dataPartRole",
      "value": "",
      "type": "String"
     },
     {
      "name": "dataSeparator",
      "value": "~",
      "type": "String"
     },
     {
      "name": "dataWhere",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "doubleClickAction",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "groupedLabelSep",
      "value": " ~ ",
      "type": "String"
     },
     {
      "name": "hoverable",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "ignoreNulls",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "interactive",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "isMultiValued",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "leafContentOverflow",
      "value": "auto",
      "type": "cccLeafContentOverflowCustom"
     },
     {
      "name": "legend",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "legendAlign",
      "value": "",
      "type": "cccLegendAlignCustom"
     },
     {
      "name": "legendClickMode",
      "value": "toggleVisible",
      "type": "cccLegendClickModeCustom"
     },
     {
      "name": "legendDrawLine",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "legendDrawMarker",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "legendFont",
      "value": "10px sans-serif",
      "type": "String"
     },
     {
      "name": "legendItemPadding",
      "value": "2.5",
      "type": "String"
     },
     {
      "name": "legendItemSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "legendMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "legendMarkerSize",
      "value": 15,
      "type": "Float"
     },
     {
      "name": "legendPaddings",
      "value": "5",
      "type": "String"
     },
     {
      "name": "legendPosition",
      "value": "bottom",
      "type": "cccLegendPositionCustom"
     },
     {
      "name": "legendShape",
      "value": "",
      "type": "cccLegendShapeCustom"
     },
     {
      "name": "legendSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "legendSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "legendTextMargin",
      "value": 6,
      "type": "Float"
     },
     {
      "name": "legendVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "margins",
      "value": "3",
      "type": "String"
     },
     {
      "name": "measuresIndexes",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "multiChartColumnsMax",
      "value": 3,
      "type": "Float"
     },
     {
      "name": "multiChartIndexes",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "multiChartMax",
      "value": "",
      "type": "Float"
     },
     {
      "name": "multiChartOverflow",
      "value": "grow",
      "type": "cccMultiChartOverflowCustom"
     },
     {
      "name": "multiChartRole",
      "value": "",
      "type": "String"
     },
     {
      "name": "multiChartSingleColFillsHeight",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "multiChartSingleRowFillsHeight",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "nullInterpolationMode",
      "value": "none",
      "type": "cccNullInterpolationModeCustom"
     },
     {
      "name": "orientation",
      "value": "vertical",
      "type": "cccOrientationCustom"
     },
     {
      "name": "ortho2AxisDesiredTickCount",
      "value": "",
      "type": "Float"
     },
     {
      "name": "ortho2AxisDomainRoundMode",
      "value": "tick",
      "type": "cccOrtho2AxisDomainRoundModeCustom"
     },
     {
      "name": "ortho2AxisDomainScope",
      "value": "global",
      "type": "cccOrtho2AxisDomainScopeCustom"
     },
     {
      "name": "ortho2AxisFixedMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisFixedMin",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisGrid",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "ortho2AxisLabelSpacingMin",
      "value": "",
      "type": "Float"
     },
     {
      "name": "ortho2AxisMinorTicks",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "ortho2AxisOffset",
      "value": 0,
      "type": "Float"
     },
     {
      "name": "ortho2AxisOriginIsZero",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "ortho2AxisOverlappedLabelsMode",
      "value": "hide",
      "type": "cccOrtho2AxisOverlappedLabelsModeCustom"
     },
     {
      "name": "ortho2AxisPosition",
      "value": "",
      "type": "cccOrtho2AxisPositionCustom"
     },
     {
      "name": "ortho2AxisSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisTickExponentMax",
      "value": "",
      "type": "Float"
     },
     {
      "name": "ortho2AxisTickExponentMin",
      "value": "",
      "type": "Float"
     },
     {
      "name": "ortho2AxisTickFormatter",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "ortho2AxisTicks",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "ortho2AxisTitle",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisTitleAlign",
      "value": "",
      "type": "cccOrtho2AxisTitleAlignCustom"
     },
     {
      "name": "ortho2AxisTitleFont",
      "value": "12px sans-serif",
      "type": "String"
     },
     {
      "name": "ortho2AxisTitleMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "ortho2AxisTitleSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisTitleSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "ortho2AxisVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "ortho2AxisZeroLine",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "orthoAxisDesiredTickCount",
      "value": "",
      "type": "Float"
     },
     {
      "name": "orthoAxisDomainRoundMode",
      "value": "tick",
      "type": "cccOrthoAxisDomainRoundModeCustom"
     },
     {
      "name": "orthoAxisDomainScope",
      "value": "global",
      "type": "cccOrthoAxisDomainScopeCustom"
     },
     {
      "name": "orthoAxisFixedMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisFixedMin",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisGrid",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "orthoAxisLabelSpacingMin",
      "value": "",
      "type": "Float"
     },
     {
      "name": "orthoAxisMinorTicks",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "orthoAxisOffset",
      "value": 0,
      "type": "Float"
     },
     {
      "name": "orthoAxisOriginIsZero",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "orthoAxisOverlappedLabelsMode",
      "value": "hide",
      "type": "cccOrthoAxisOverlappedLabelsModeCustom"
     },
     {
      "name": "orthoAxisPosition",
      "value": "",
      "type": "cccOrthoAxisPositionCustom"
     },
     {
      "name": "orthoAxisSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisTickExponentMax",
      "value": "",
      "type": "Float"
     },
     {
      "name": "orthoAxisTickExponentMin",
      "value": "",
      "type": "Float"
     },
     {
      "name": "orthoAxisTickFormatter",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "orthoAxisTicks",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "orthoAxisTitle",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisTitleAlign",
      "value": "",
      "type": "cccOrthoAxisTitleAlignCustom"
     },
     {
      "name": "orthoAxisTitleFont",
      "value": "12px sans-serif",
      "type": "String"
     },
     {
      "name": "orthoAxisTitleMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "orthoAxisTitleSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisTitleSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "orthoAxisVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "orthoAxisZeroLine",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "overflowMarkersVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "paddings",
      "value": "0",
      "type": "String"
     },
     {
      "name": "panelSizeRatio",
      "value": "",
      "type": "Float"
     },
     {
      "name": "percentValueFormat",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "plot2",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "plot2AreasVisible",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "plot2ColorAxis",
      "value": 2,
      "type": "Float"
     },
     {
      "name": "plot2DotsVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "plot2LinesVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "plot2NullInterpolationMode",
      "value": "none",
      "type": "cccPlot2NullInterpolationModeCustom"
     },
     {
      "name": "plot2OrthoAxis",
      "value": 1,
      "type": "Float"
     },
     {
      "name": "plot2Series",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "plot2SeriesIndexes",
      "value": -1,
      "type": "Array"
     },
     {
      "name": "plot2Stacked",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "plot2TrendLabel",
      "value": "",
      "type": "String"
     },
     {
      "name": "plot2TrendType",
      "value": "",
      "type": "String"
     },
     {
      "name": "plot2ValuesAnchor",
      "value": "",
      "type": "cccPlot2ValuesAnchorCustom"
     },
     {
      "name": "plot2ValuesFont",
      "value": "10px sans-serif",
      "type": "String"
     },
     {
      "name": "plot2ValuesMask",
      "value": "{value}",
      "type": "String"
     },
     {
      "name": "plot2ValuesVisible",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "plotFrameVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "pointingMode",
      "value": "near",
      "type": "cccPointingModeCustom"
     },
     {
      "name": "renderCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "selectable",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "selectionChangedAction",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "seriesInRows",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "seriesRole",
      "value": "",
      "type": "String"
     },
     {
      "name": "smallAspectRatio",
      "value": "",
      "type": "Float"
     },
     {
      "name": "smallContentMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "smallContentPaddings",
      "value": "0",
      "type": "String"
     },
     {
      "name": "smallHeight",
      "value": "",
      "type": "String"
     },
     {
      "name": "smallMargins",
      "value": "2%",
      "type": "String"
     },
     {
      "name": "smallPaddings",
      "value": "0",
      "type": "String"
     },
     {
      "name": "smallTitleAlign",
      "value": "",
      "type": "cccSmallTitleAlignCustom"
     },
     {
      "name": "smallTitleFont",
      "value": "14px sans-serif",
      "type": "String"
     },
     {
      "name": "smallTitleMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "smallTitlePaddings",
      "value": "0",
      "type": "String"
     },
     {
      "name": "smallTitlePosition",
      "value": "top",
      "type": "cccSmallTitlePositionCustom"
     },
     {
      "name": "smallTitleSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "smallTitleSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "smallWidth",
      "value": "",
      "type": "String"
     },
     {
      "name": "stacked",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "timeSeries",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "timeSeriesFormat",
      "value": "%Y-%m-%d",
      "type": "String"
     },
     {
      "name": "titleAlign",
      "value": "",
      "type": "cccTitleAlignCustom"
     },
     {
      "name": "titleFont",
      "value": "14px sans-serif",
      "type": "String"
     },
     {
      "name": "titleMargins",
      "value": "0",
      "type": "String"
     },
     {
      "name": "titlePaddings",
      "value": "0",
      "type": "String"
     },
     {
      "name": "titlePosition",
      "value": "top",
      "type": "cccTitlePositionCustom"
     },
     {
      "name": "titleSize",
      "value": "",
      "type": "String"
     },
     {
      "name": "titleSizeMax",
      "value": "",
      "type": "String"
     },
     {
      "name": "tooltipArrowVisible",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "tooltipClassName",
      "value": "",
      "type": "String"
     },
     {
      "name": "tooltipEnabled",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "tooltipFade",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "tooltipFollowMouse",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "tooltipFormat",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltipGravity",
      "value": "",
      "type": "cccTooltipGravityCustom"
     },
     {
      "name": "tooltipHtml",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "tooltipOffset",
      "value": "",
      "type": "Float"
     },
     {
      "name": "tooltipOpacity",
      "value": 0.9,
      "type": "Float"
     },
     {
      "name": "tooltipUseCorners",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "trendAreasVisible",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "trendColorAxis",
      "value": 2,
      "type": "Float"
     },
     {
      "name": "trendDotsVisible",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "trendLabel",
      "value": "",
      "type": "String"
     },
     {
      "name": "trendLinesVisible",
      "value": true,
      "type": "Boolean"
     },
     {
      "name": "trendOrthoAxis",
      "value": 1,
      "type": "Float"
     },
     {
      "name": "trendStacked",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "trendType",
      "value": "",
      "type": "String"
     },
     {
      "name": "trendValuesAnchor",
      "value": "right",
      "type": "cccTrendValuesAnchorCustom"
     },
     {
      "name": "trendValuesFont",
      "value": "10px sans-serif",
      "type": "String"
     },
     {
      "name": "trendValuesMask",
      "value": "",
      "type": "String"
     },
     {
      "name": "trendValuesVisible",
      "value": false,
      "type": "Boolean"
     },
     {
      "name": "userSelectionAction",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "valueFormat",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "valueRole",
      "value": "",
      "type": "String"
     },
     {
      "name": "valuesAnchor",
      "value": "",
      "type": "cccValuesAnchorCustom"
     },
     {
      "name": "valuesFont",
      "value": "10px sans-serif",
      "type": "String"
     },
     {
      "name": "valuesMask",
      "value": "",
      "type": "String"
     },
     {
      "name": "valuesOptimizeLegibility",
      "value": "",
      "type": "Boolean"
     },
     {
      "name": "valuesOverflow",
      "value": "hide",
      "type": "cccValuesOverflowCustom"
     },
     {
      "name": "valuesVisible",
      "value": "",
      "type": "Boolean"
     }
    ],
    "meta_cdwSupport": "true"
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SQL",
    "name": "SQL Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "SQL Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "0a56c773-c21a-33cb-c9aa-716d1c31731a",
    "type": "Componentssql_sqlJndi",
    "typeDesc": "sql over sqlJndi",
    "meta": "CDA",
    "meta_conntype": "sql.jndi",
    "meta_datype": "sql",
    "parent": "SQL",
    "properties": [
     {
      "name": "name",
      "value": "dummy",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "",
      "type": "Jndi"
     },
     {
      "name": "query",
      "value": "",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "MDX",
    "name": "MDX Queries",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "MDX Queries",
      "type": "Label"
     }
    ]
   },
   {
    "id": "d537371a-524d-998a-8a3c-2f8bb73672b7",
    "type": "Componentsmdx_mondrianJndi",
    "typeDesc": "mdx over mondrianJndi",
    "parent": "MDX",
    "properties": [
     {
      "name": "name",
      "value": "jobsQuery",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "Inquiro",
      "type": "Jndi"
     },
     {
      "name": "catalog",
      "value": "mondrian:/Inquiro",
      "type": "MondrianCatalog"
     },
     {
      "name": "query",
      "value": "WITH\n SET JOBS AS FILTER([Jobs and Tasks].[Task ID].Members, [Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Type') = 'job') \n SET METRICS AS HIERARCHIZE({{[Hadoop Metrics].[Hadoop Metric Group].Members}, {[Hadoop Metrics].[Hadoop Metric Name].Members}})\n SET MEASURES AS {[Measures].[Type], [Measures].[Subtype], [Measures].[Job Name], [Measures].[Username], [Measures].[Status], [Measures].[Start Time], [Measures].[Finish Time], [Measures].[Spent Time (ms)]}\n MEMBER [Measures].[Subtype] AS ANCESTOR([Jobs and Tasks].CURRENTMEMBER, [Jobs and Tasks].[Subtype]).NAME\n MEMBER [Measures].[Type] AS ANCESTOR([Jobs and Tasks].CURRENTMEMBER, [Jobs and Tasks].[Type]).NAME\n MEMBER [Measures].[Job Name] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Job Name'),'')\n MEMBER [Measures].[Username] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Username'),'')\n MEMBER [Measures].[Status] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Status'),'')\n MEMBER [Measures].[Start Time] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Start Time')) AS STRING), '')\n MEMBER [Measures].[Finish Time] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Finish Time')) AS STRING), '')\n MEMBER [Measures].[Spent Time (ms)] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Spent Time (ms)')) AS STRING), '')\nSELECT\nNON EMPTY MEASURES ON COLUMNS,\nNON EMPTY JOBS ON ROWS\nFROM [Inquiro - Hadoop Metrics]",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "bandedMode",
      "value": "compact",
      "type": "BandedMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "mondrian.jndi",
    "meta_datype": "mdx"
   },
   {
    "id": "7b48d20c-0ceb-4c9c-4eb6-625215042dee",
    "type": "Componentsmdx_mondrianJndi",
    "typeDesc": "mdx over mondrianJndi",
    "parent": "MDX",
    "properties": [
     {
      "name": "name",
      "value": "hadoopMetricsQuery",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "Inquiro",
      "type": "Jndi"
     },
     {
      "name": "catalog",
      "value": "mondrian:/Inquiro",
      "type": "MondrianCatalog"
     },
     {
      "name": "query",
      "value": "WITH\n MEMBER [Measures].[Measure] AS [Measures].[Metric Average]+0\n SET TASKS AS FILTER([Jobs and Tasks].[Task ID].Members, [Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Type') = 'task')  \n SET METRICS AS FILTER({[Hadoop Metrics].[Hadoop Metric Group].Members, [Hadoop Metrics].[Hadoop Metric Name].Members}, [Hadoop Metrics].CURRENTMEMBER.LEVEL.NAME <> 'Hadoop Metric Group')\n SET MEASURES AS {[Measures].[Measure], [Measures].[Hostname], [Measures].[Username], [Measures].[Status], [Measures].[Start Time], [Measures].[Finish Time], [Measures].[Spent Time (ms)], [Measures].[Job Name], [Measures].[Parent Job ID], [Measures].[Type], [Measures].[Subtype], [Measures].[Metric Name], [Measures].[Metric Unit]}\n MEMBER [Measures].[Subtype] AS ANCESTOR([Jobs and Tasks].CURRENTMEMBER, [Jobs and Tasks].[Subtype]).NAME\n MEMBER [Measures].[Type] AS ANCESTOR([Jobs and Tasks].CURRENTMEMBER, [Jobs and Tasks].[Type]).NAME\n MEMBER [Measures].[Metric Name] AS [Hadoop Metrics].CURRENTMEMBER.PARENT.NAME\n MEMBER [Measures].[Metric Unit] AS [Hadoop Metrics].CURRENTMEMBER.NAME\n MEMBER [Measures].[Parent Job ID] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Parent Job ID'),'')\n MEMBER [Measures].[Job Name] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Job Name'),'')\n MEMBER [Measures].[Hostname] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Hostname'),'')\n MEMBER [Measures].[Username] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Username'),'')\n MEMBER [Measures].[Status] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Status'),'')\n MEMBER [Measures].[Start Time] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Start Time')) AS STRING), '')\n MEMBER [Measures].[Finish Time] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Finish Time')) AS STRING), '')\n MEMBER [Measures].[Spent Time (ms)] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Spent Time (ms)')) AS STRING), '')\nSELECT\n NON EMPTY MEASURES ON COLUMNS,\n NON EMPTY TASKS * METRICS ON ROWS\nFROM [Inquiro - Hadoop Metrics]",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "bandedMode",
      "value": "compact",
      "type": "BandedMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "mondrian.jndi",
    "meta_datype": "mdx"
   },
   {
    "id": "1a40b55a-b46b-3c1b-7589-98ab6690f721",
    "type": "Componentsmdx_mondrianJndi",
    "typeDesc": "mdx over mondrianJndi",
    "parent": "MDX",
    "properties": [
     {
      "name": "name",
      "value": "pdiMetricsQuery",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "Inquiro",
      "type": "Jndi"
     },
     {
      "name": "catalog",
      "value": "mondrian:/Inquiro",
      "type": "MondrianCatalog"
     },
     {
      "name": "query",
      "value": "WITH\n MEMBER [Measures].[Measure] AS [Measures].[Metric Average]+0\n SET TASKS AS FILTER([Jobs and Tasks].[Task ID].Members, [Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Type') = 'task')  SET STEPS AS {[PDI Steps.Steps].[Step Type].Members}\n SET METRICS AS HIERARCHIZE({[PDI Metrics].[Metric Name].Members})\n SET MEASURES AS {[Measures].[Measure], [Measures].[Hostname], [Measures].[Username], [Measures].[Status], [Measures].[Start Time], [Measures].[Finish Time], [Measures].[Spent Time (ms)], [Measures].[Job Name], [Measures].[Parent Job Task ID], [Measures].[Type], [Measures].[Subtype]}\n MEMBER [Measures].[Subtype] AS ANCESTOR([Jobs and Tasks].CURRENTMEMBER, [Jobs and Tasks].[Subtype]).NAME\n MEMBER [Measures].[Type] AS ANCESTOR([Jobs and Tasks].CURRENTMEMBER, [Jobs and Tasks].[Type]).NAME\n MEMBER [Measures].[Parent Job Task ID] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Parent Job ID'),'')\n MEMBER [Measures].[Job Name] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Job Name'),'')\n MEMBER [Measures].[Hostname] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Hostname'),'')\n MEMBER [Measures].[Username] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Username'),'')\n MEMBER [Measures].[Status] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID',[Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Status'),'')\n MEMBER [Measures].[Start Time] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Start Time')) AS STRING), '')\n MEMBER [Measures].[Finish Time] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Finish Time')) AS STRING), '')\n MEMBER [Measures].[Spent Time (ms)] AS IIF([Jobs and Tasks].LEVEL.NAME='Task ID', CAST(([Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Spent Time (ms)')) AS STRING), '')\nSELECT\n NON EMPTY MEASURES ON COLUMNS,\n NON EMPTY TASKS * STEPS *  METRICS ON ROWS\nFROM [Inquiro - PDI Metrics]",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "bandedMode",
      "value": "compact",
      "type": "BandedMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "mondrian.jndi",
    "meta_datype": "mdx"
   },
   {
    "id": "a9f14914-6bf6-3696-66f0-a028e3db3fa2",
    "type": "Componentsmdx_mondrianJndi",
    "typeDesc": "mdx over mondrianJndi",
    "parent": "MDX",
    "properties": [
     {
      "name": "name",
      "value": "jobsExecutionTimeQuery",
      "type": "Id"
     },
     {
      "name": "access",
      "value": "public",
      "type": "Access"
     },
     {
      "name": "jndi",
      "value": "Inquiro",
      "type": "Jndi"
     },
     {
      "name": "catalog",
      "value": "mondrian:/Inquiro",
      "type": "MondrianCatalog"
     },
     {
      "name": "query",
      "value": "WITH\n SET JOBS AS FILTER([Jobs and Tasks].[Task ID].Members, [Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Type') = 'task') \n SET METRICS AS HIERARCHIZE({{[Hadoop Metrics].[Hadoop Metric Group].Members}, {[Hadoop Metrics].[Hadoop Metric Name].Members}})\n SET MEASURES AS {[Measures].[Job ID], [Measures].[Spent Time (ms)]}\n MEMBER [Measures].[Job Name] AS [Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Job Name')\n MEMBER [Measures].[Spent Time (ms)] AS [Jobs and Tasks].[Task ID].CURRENTMEMBER.PROPERTIES('Spent Time (ms)')+0 \nSELECT\n NON EMPTY MEASURES ON COLUMNS,\n NON EMPTY JOBS ON ROWS\nFROM [Inquiro - Hadoop Metrics]",
      "type": "SqlQuery"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "CdaParameters"
     },
     {
      "name": "bandedMode",
      "value": "compact",
      "type": "BandedMode"
     },
     {
      "name": "cdacolumns",
      "value": "[]",
      "type": "CdaColumnsArray"
     },
     {
      "name": "cdacalculatedcolumns",
      "value": "[]",
      "type": "CdaCalculatedColumnsArray"
     },
     {
      "name": "output",
      "value": "[]",
      "type": "IndexArray"
     },
     {
      "name": "outputMode",
      "value": "include",
      "type": "OutputMode"
     },
     {
      "name": "cacheDuration",
      "value": 3600,
      "type": "Integer"
     },
     {
      "name": "cache",
      "value": "true",
      "type": "Boolean"
     }
    ],
    "meta": "CDA",
    "meta_conntype": "mondrian.jndi",
    "meta_datype": "mdx"
   }
  ]
 },
 "filename": "/system/Inquiro/dashboards/timeline.cdfde"
}